
buildscript {

    repositories {
        jcenter()
    }

    dependencies {
        classpath "com.avast.gradle:docker-compose-gradle-plugin:0.4.5"
    }

}

apply plugin: com.avast.gradle.dockercompose.DockerComposePlugin



dockerCompose {

    useComposeFiles = ['docker-compose.yml']

    if (project.hasProperty('ifs.full-deployment.enabled') ? project.property('ifs.full-deployment.enabled').toBoolean() : true) {
        useComposeFiles.add('docker-compose-full.yml')
    }

    if (project.hasProperty('ifs.zipkin.enabled') ? project.property('ifs.zipkin.enabled').toBoolean() : false) {
        useComposeFiles.add('docker-compose-zipkin.yml')
    }

    if (project.hasProperty('ifs.admin.enabled') ? project.property('ifs.admin.enabled').toBoolean() : false) {
        useComposeFiles.add('docker-compose-admin-console.yml')
    }

    if (project.hasProperty('ifs.fractal.enabled') ? project.property('ifs.fractal.enabled').toBoolean() : false) {
        useComposeFiles.add('docker-compose-fractal.yml')
    }

    removeContainers = false
    removeImages = "Local" // Accepted values are: "All", "Local" and "None"
    removeVolumes = false

    waitForTcpPortsDisconnectionProbeTimeout = java.time.Duration.ofMillis(100)
}