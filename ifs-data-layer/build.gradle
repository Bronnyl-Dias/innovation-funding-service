
apply from: "script-support.gradle"



subprojects {


    apply from: rootProject.file("java-spring-boot.gradle")


    ext.ifsWebSystemUserId="8394d970-b250-4b15-9621-3534325691b4"

    // data-service-commons is not a docker project.
    if (it.name != 'data-service-commons') {



        apply from: rootProject.file("openshift-build.gradle")
        apply from: rootProject.file("prepare-docker.gradle")

        // convoluted rubbish!!!! improve?
        ext.dockerDir = "$project.parent.projectDir/docker/"

        buildDocker.dependsOn prepareDockerInput
        buildDocker.dependsOn ":docker:app-base-image:buildDocker"
        buildDocker.tag="innovateuk/" + project.name.replaceAll(/ifs-/,"")+":latest"
        buildDocker.inputDir = project.file("$project.buildDir/docker")
        tagDocker.imageId="innovateuk/" + project.name.replaceAll(/ifs-/,"")+":latest"


        // Workaround for https://github.com/spring-projects/spring-boot/issues/8308
        // Can reinstate excludeDevtools in the bootRepackage task in next release
        springBoot {
            excludeDevtools = !(project.hasProperty('cloud') && cloud == 'development');
        }

        bootRepackage {
            mainClass = 'org.innovateuk.ifs.Application'
            classifier = "autostart"
        //    excludeDevtools = !(project.hasProperty('cloud') && cloud == 'development');

            // By explicitly adding the inputs and outputs to this task, we can utilize the `incremental build' feature.
            inputs.files(jar.outputs)
            outputs.file file(jar.archiveName.toString().replace(".jar", "-autostart.jar"))
        }
    }

    //noinspection GroovyMissingReturnStatement
    processResources {
        filesMatching("*.properties") {
            expand project.properties
        }
    }

    processTestResources {
        filesMatching("*.properties") {
            expand project.properties
        }
    }

}

task initDB {
    createTestSchema.mustRunAfter startMySql

    dependsOn startMySql
    dependsOn createTestSchema
}

ext {
    snippetsDir = file('build/generated-snippets')
    javaLanguageLevel = 1.8
    generatedMapperSourcesDir = 'build/classes/main/org/innovateuk/ifs/mappers'
}