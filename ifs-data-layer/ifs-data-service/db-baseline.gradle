import com.bmuschko.gradle.docker.tasks.image.*

buildscript {


    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "com.bmuschko:gradle-docker-plugin:3.0.11"
    }

}


// use fully qualified class name
apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin
task dbBaselineDockerEnv {
    dependsOn "build"

    def inputDir = project.file("$project.buildDir/docker-db-baseline")
    doFirst {
        copy {
            from file('src/main/docker/Dockerfile-dbbaseline')
            rename 'Dockerfile-dbbaseline', 'Dockerfile'
            into inputDir
        }
        copy {
            from file('src/main/resources')
            include 'db/**/*.sql'
            into inputDir
        }
        copy {
            from file("${rootProject.projectDir}/setup-files/scripts/docker/baseline-db.sh")
            into inputDir
        }
    }
}

task dbBaselineDocker(type: DockerBuildImage) {
    dependsOn "dbBaselineDockerEnv"
    tag = 'innovateuk/dbbaseline'
    inputDir = project.file("$project.buildDir/docker-db-baseline")
}

task dbAnonymisedDumpDockerEnv {
    dependsOn "build"
    def inputDir = project.file("$project.buildDir/docker-db-anonymised")

    doFirst {
        copy {
            from file('src/main/docker/proxysql/Dockerfile-proxysql')
            rename 'Dockerfile-proxysql', 'Dockerfile'
            into inputDir
        }
        copy {
            from "src/main/docker/proxysql"
            into "${inputDir}/proxysql"
        }
    }
}


task dbAnonymisedDumpDocker(type: DockerBuildImage, dependsOn: build) {
    dependsOn "dbAnonymisedDumpDockerEnv"
    tag = 'innovateuk/db-anonymised-data'
    inputDir = project.file("$project.buildDir/docker-db-anonymised")
}


