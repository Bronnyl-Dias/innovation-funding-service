bootRun {
    addResources = false
}

configurations {
    providedRuntime
}
project.version = prototypesServiceVersion
tagDocker.tag = prototypesServiceVersion
osStageRemote.tag = "1.1.42-prototypes"
tagDockerLocal.tag = prototypesServiceVersion
osStageLocal.tag = prototypesServiceVersion

createContainer.hostName="prototypes-svc"
createContainer.containerName="prototypes-svc"
createContainer.containerId="prototypes-svc"
createContainer.portBindings = ['1234:8080']

def enabled = project.hasProperty('ifs.prototypes.enabled') ? project.property('ifs.prototypes.enabled').toBoolean() : false
[stop, removeContainer, createContainer, deploy, wait].each { task ->
    task.enabled = enabled
}

prepareDockerBaseInput {
    inputs.file("$rootProject.projectDir/ifs-web-service/ifs-web-core/build/classes")
    dependsOn ":ifs-web-service:ifs-web-core:build"
}

jar {
    baseName = 'ifs-prototypes-service'
}

dependencies {
    compile project(':ifs-web-service:ifs-web-core')

    testCompile project(':ifs-resources').sourceSets.test.output
    testCompile project(":ifs-commons").sourceSets.test.output
    testCompile project(':ifs-web-service:ifs-web-core').sourceSets.test.output
}

task startPrototypes(dependsOn: deploy) {
}


