bootRun {
    addResources = false
}

configurations {
    providedRuntime
}
project.version = applicationServiceVersion
tagDocker.tag = applicationServiceVersion
osStageRemote.tag = applicationServiceVersion
tagDockerLocal.tag = applicationServiceVersion
osStageLocal.tag = applicationServiceVersion

createContainer.hostName="application-svc"
createContainer.containerName="application-svc"
createContainer.containerId="application-svc"
createContainer.portBindings = ['9001:8000']

def enabled = project.hasProperty('ifs.application-service.enabled') ? project.property('ifs.application-service.enabled').toBoolean() : true
[stop, removeContainer, createContainer, deploy, wait].each { task ->
    task.enabled = enabled
}

prepareDockerBaseInput {
    inputs.file("$rootProject.projectDir/ifs-web-service/ifs-web-core/build/classes")
    dependsOn ":ifs-web-service:ifs-web-core:build"
}

dependencies {
    compile project(':ifs-web-service:ifs-web-core')

    testCompile project(':ifs-resources').sourceSets.test.output
    testCompile project(":ifs-commons").sourceSets.test.output
    testCompile project(':ifs-web-service:ifs-web-core').sourceSets.test.output

    testCompile "com.openpojo:openpojo:0.8.6"
    testCompile "org.skyscreamer:jsonassert:1.5.0"
    testCompile "net.sf.opencsv:opencsv:2.3"
}

jar.dependsOn ":ifs-web-service:gulp_default"


