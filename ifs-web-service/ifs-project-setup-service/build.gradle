
project.version = projectSetupServiceVersion
tagDocker.tag = projectSetupServiceVersion
osStageRemote.tag = projectSetupServiceVersion
tagDockerLocal.tag = projectSetupServiceVersion
osStageLocal.tag = projectSetupServiceVersion

createContainer.hostName="project-setup-svc"
createContainer.containerName="project-setup-svc"
createContainer.containerId="project-setup-svc"
createContainer.portBindings = ['9005:8000']

def enabled = project.hasProperty('ifs.project-setup-service.enabled') ? project.property('ifs.project-setup-service.enabled').toBoolean() : true
stop.enabled = enabled
removeContainer.enabled = enabled
createContainer.enabled = enabled
deploy.enabled =enabled
wait.enabled = enabled


ext.serverContext = '/project-setup'

dependencies {
    compile project(':ifs-web-service:ifs-web-core')

    compile "commons-io:commons-io:2.5"

    testCompile project(':ifs-resources').sourceSets.test.output
    testCompile project(':ifs-web-service:ifs-web-core').sourceSets.test.output
    testCompile project(":ifs-commons").sourceSets.test.output

    testCompile "com.openpojo:openpojo:0.8.6"
    testCompile "org.skyscreamer:jsonassert:1.5.0"
    testCompile "net.sf.opencsv:opencsv:2.3"
}

processResources {
    filesMatching("*.properties") {
        expand project.properties
    }
    if (project.hasProperty("profile") && project.profile == "automated") {
        exclude '**/application.properties'
    }
}