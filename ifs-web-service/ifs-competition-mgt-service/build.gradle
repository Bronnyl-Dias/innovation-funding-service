project.version = competitionMgtServiceVersion
tagDocker.tag = competitionMgtServiceVersion
osStageRemote.tag = competitionMgtServiceVersion
tagDockerLocal.tag = competitionMgtServiceVersion
osStageLocal.tag = competitionMgtServiceVersion

createContainer.hostName="competition-mgt-svc"
createContainer.containerName="competition-mgt-svc"
createContainer.containerId="competition-mgt-svc"
createContainer.portBindings = ['9003:8000']

def enabled = project.hasProperty('ifs.competition-mgt-service.enabled') ? project.property('ifs.competition-mgt-service.enabled').toBoolean() : true

[stop, removeContainer, createContainer, deploy, wait].each { task ->
    task.enabled = enabled
}

ext.serverContext = '/management'

dependencies {
    compile project(':ifs-web-service:ifs-web-core')

    compile "commons-io:commons-io:2.5"

    testCompile project(':ifs-resources').sourceSets.test.output
    testCompile project(":ifs-commons").sourceSets.test.output
    testCompile project(':ifs-web-service:ifs-web-core').sourceSets.test.output

    testCompile 'org.assertj:assertj-core:3.9.0'
    testCompile "com.openpojo:openpojo:0.8.6"
    testCompile "org.skyscreamer:jsonassert:1.5.0"
    testCompile "net.sf.opencsv:opencsv:2.3"
}

processResources {
    filesMatching("*.properties") {
        expand project.properties
    }
    if (project.hasProperty("profile") && project.profile == "automated") {
        exclude '**/application.properties'
    }
}
